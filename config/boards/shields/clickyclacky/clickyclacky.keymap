#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV_1 1
#define BLU_2 2

#define COMBO_HOLD_TIME_MS 50

/ {
    
    combos {
       compatible = "zmk,combos";
       combo_threef {
           timeout-ms = <COMBO_HOLD_TIME_MS>;
           key-positions = < 30 31 32>;
           bindings = <&kp LC(LA(DEL))>;
       };
       combo_win {
           timeout-ms = <COMBO_HOLD_TIME_MS>;
           key-positions = < 33 34 35>;
           bindings = <&sk LGUI>;
       };
       combo_blue {
           timeout-ms = <COMBO_HOLD_TIME_MS>;
           key-positions = < 14 24>;
           bindings = <&to BLU_2>;
       };
    };

    behaviors {
        shift_cap: shift_cap {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
         bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &mt LCTRL ESC &kp W     &kp F       &kp P       &kp G                    &kp J       &kp L       &kp U       &kp Y       &kp SEMI      
                &kp V       &kp A       &kp R       &kp S       &kp T                    &kp N       &kp E       &kp I       &kp O       &kp MINUS     
                &kp Z       &kp X       &kp C       &kp D       &kp B                    &kp H       &kp K       &kp M       &kp Q       &kp EQUAL     
                                        &kp RET     &shift_cap  &tog NAV_1               &bspc_del   &kp TAB    &kp SPACE            
            >;
        };

        nav_layer {
            bindings = <
                &trans      &none       &kp LC(F)   &kp LC(P)   &kp F1                   &none       &kp UP      &none       &none        &kp GRAVE        
                &kp LC(V)   &kp LC(A)   &none       &kp LC(S)   &kp F2                   &kp LEFT    &kp DOWN    &kp RIGHT   &kp LBKT     &kp RBKT         
                &kp LC(Z)   &kp LC(X)   &kp LC(C)   &none       &kp LC(B)                &none       &none       &none       &kp HOME     &kp END          
                                        &kp LSHFT   &kp LALT    &trans                   &trans      &trans      &trans 
            >;
        };

        bl_layer {
            bindings = <
                &trans  &out OUT_USB    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2     &kp N7      &kp N8      &kp N9       &kp BACKSLASH    &kp MINUS             
                &none   &out OUT_BLE    &bt BT_CLR      &bt BT_NXT      &bt BT_PRV       &kp N4      &kp N5      &kp N6       &kp ASTRK        &kp PLUS             
                &none   &out OUT_TOG    &none           &none           &none            &kp N1      &kp N2      &kp N3       &none            &kp ENTER  
                                        &to DEFAULT     &trans          &trans           &trans      &trans      &trans
            >;
        };
    };
};