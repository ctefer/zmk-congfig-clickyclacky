#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYM_1 1
#define LAY_2 2
#define LAY_3 3
#define LAY_4 4

#define COMBO_HOLD_TIME_MS 50

/ {
    combos {
       compatible = "zmk,combos";
       combo_threef {
           timeout-ms = <COMBO_HOLD_TIME_MS>;
           key-positions = < 30 31 32>;
           bindings = <&kp LC(LA(DEL))>;
       };
       combo_win {
           timeout-ms = <COMBO_HOLD_TIME_MS>;
           key-positions = < 33 34 35>;
           bindings = <&sk LGUI>;
       };
       combo_blue {
           timeout-ms = <COMBO_HOLD_TIME_MS>;
           key-positions = < 14 24>;
           bindings = <&to BLU_2>;
       };
    };

    behaviors {
        shift_cap: shift_cap {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
         bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def_layer {
            bindings = <
                &kp Q       &kp W       &kp F       &kp P       &kp G              &kp J       &kp L       &kp U       &kp Y       &kp SQT 
                &kp V       &kp A       &kp R       &kp S       &kp T              &kp N       &kp E       &kp I       &kp O       &kp SEMI
                &kp Z       &kp X       &kp C       &kp D       &kp B              &kp H       &kp K       &kp M       &kp COMMA   &kp DOT
                                        &kp RET     &sk LSHFT   &to LAY_2          &mo SYM_1   &kp TAB     &kp SPACE            
            >;
        };

        sym_layer {
            bindings = <
                &kp ESC     &kp LBKT    &kp LBRC    &kp LPAR    &kp TILDE           &kp CARET   &kp RPAR    &kp RBRC    &kp RBKT     &kp GRAVE
                &kp MINUS   &kp ASTRK   &kp EQUAL   &kp UNDER   &kp DLLR            &kp HASH    &kp LGUI    &sk LALT    &sk LCTRL    &none
                &kp PLUS    &kp PIPE    &kp AT      &kp FSLH    &kp PRCNT           &none       &kp BSLH    &kp AMPS    &kp QMARK    &kp EXCL
                                        &kp RET     &sk LSHFT   &to DEFAULT         &mo SYM_1   &kp TAB     &kp SPACE 
            >;
        };

        nav_layer {
            bindings = <
                &kp ESC     &none       &kp LC(F)   &kp LC(P)   &kp F1              &kp HOME    &kp UP      &LC(I)      &none        &kp DEL
                &kp LC(V)   &kp LC(A)   &none       &kp LC(S)   &kp LC(LA(T))       &kp LEFT    &kp DOWN    &kp RIGHT   &kp LBKT     &kp BSPC
                &kp LC(Z)   &kp LC(X)   &kp LC(C)   &none       &kp LC(B)           &kp END     &none       &none       &kp COMMA    &kp ENTER
                                        &kp RET     &sk LSHFT   &to LAY_3           &mo SYM_1   &kp TAB     &kp SPACE 
            >;
        };

        num_layer {
            bindings = <
                &kp ESC     &kp F7      &kp F8      &kp F9      &kp F10             &kp N7      &kp N8      &kp N9       &kp N0       &kp MINUS
                &none       &kp F4      &kp F5      &kp F6      &kp F11             &kp N4      &kp N5      &kp N6       &kp ASTRK    &kp PLUS
                &none       &kp F1      &kp F2      &kp F3      &kp F12             &kp N1      &kp N2      &kp N3       &kp ENTER    &kp BACKSLASH
                                        &kp RET     &sk LSHFT   &to DEFAULT         &mo SYM_1   &kp TAB     &kp SPACE
            >;
        };

        ble_layer {
            bindings = <
                &kp ESC     &out OUT_USB    &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2          &kp B &kp T &kp B &kp T &none
                &none       &out OUT_BLE    &bt BT_CLR      &bt BT_NXT     &bt BT_PRV            &kp B &kp T &kp B &kp T &none
                &none       &out OUT_TOG    &none           &none          &none                 &kp B &kp T &kp B &kp T &none
                                            &kp RET        &sk LSHFT       &to DEFAULT           &mo SYM_1   &kp TAB     &kp SPACE
            >;
        };
    };
};